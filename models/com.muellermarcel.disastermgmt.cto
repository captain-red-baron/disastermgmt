/*
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */


namespace com.muellermarcel.disastermgmt

/**
* An Aid Organization providing aid ressources in case of a disaster
*/
participant AidOrg identified by aidOrgId {
  o String aidOrgId
}

/**
* A coordination check point where aid ressources are delivered, verified and coordinated.
*/
participant CoordCkpt identified by coordCkptId {
  o String coordCkptId

}

/**
* A coordinator moving freely in the disasterous area to see needs for aid ressources 
* reuesting them.
*/
participant Coordinator identified by coordinatorId {
  o String coordinatorId
}

/** 
* An request for aid to be delivered to a specific coordination check point.
* 
*/
asset AidRequest identified by aidRequestId {
  o String aidRequestId
  --> CoordCkpt coordCkpt
  o AidRessource AidRessource
  o Double pendingAidRessourceAmount
  o Double neededAidRessourceAmount
  o Double receivedAidRessourceAmount
}

/**
* A position identified by latitude and longitude
*/
concept Position {
  o Double lat
  o Double long
}

/** 
* Aid ressources which might be needed at the location of a disaster.
*/
enum AidRessource {
  o VOLUNTEER
  o DOCTOR
  o FOODCONTAINER
  o DRINKCONTAINER
  o TRUCK
  o VAN
  o DRONE
}

/**
* The status of an aid request.
*/
enum AidRequestStatus {
  o REQUESTED
  o FULLFILLED
  o CANCELED
}

/**
* A transaction for the aid organitations to send a requested
* aid ressource.
*/
transaction sendAidRessource {
  --> AidRequest asset
  o AidRessource aidRessource
  o Double aidAmount
}

/** 
* The confirmation of an aid ressource arrival done by the 
* coordination checkpoints.
*/
transaction confirmRessourceArrival {
  --> AidRequest asset
  o AidRessource aidRessource
  o Double aidAmount
}

/**
* Creating a new aid request by a coordinator.
*/
transaction createAidRequest {
  --> CoordCkpt coordCkpt
  o AidRessource aidRessource
  o Double aidAmount
}

/**
* Cancel a aid request by a coordinator. For example if not needed anymore.
*/
transaction cancelAidRequest {
  --> AidRequest asset
}

transaction SetupDemo  {
}